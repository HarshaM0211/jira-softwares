<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


    <!-- Async Task -->

    <!-- 
    <task:annotation-driven executor="asyncExecutor" exception-handler="asyncExceptionHandler" />
    <task:executor id="asyncExecutor" pool-size="${async.pool.size}" queue-capacity="${async.queue.capacity}" />
     -->

    <!-- Spring MVC Configuration -->

    <mvc:annotation-driven />
    <context:annotation-config />
    <context:component-scan base-package="com.mandark.jira" />


	<!-- Message Converters -->

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
            </list>
        </property>
    </bean>

   <!-- Messages -->

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:messages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <bean id="userMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:messages-user</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8" />
    </bean>


    <!-- Messages :: Bundle -->

    <bean id="messageBundle" class="com.mandark.jira.app.MessageBundle">
        <constructor-arg name="messageSource" ref="messageSource" />
        <constructor-arg name="userMessageSource" ref="userMessageSource" />
    </bean>



    <!-- Web / REST Exception Handlers -->

    <bean id="abstractExceptionHandler" class="com.mandark.jira.web.AbstractExceptionHandler" abstract="true">
      <property name="messageBundle" ref="messageBundle" />
    </bean>

    <bean id="restExceptionHandler" class="com.mandark.jira.web.RestExceptionHandler" parent="abstractExceptionHandler">
    </bean>



    <!-- JPA Beans Processor -->

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />




    <!-- JPA Beans Processor -->

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />



    <!-- Persistence :: ORM -->

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>com.mandark.jira.app.persistence.orm</value>
            </list>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="${db}" />
                <property name="generateDdl" value="true" />
                <property name="showSql" value="false" />
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
        <property name="persistenceUnitName" value="punit" />
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.dialect" value="${hibernate.dialect}" />
                <entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
                <entry key="hibernate.show_sql" value="${hibernate.show_sql}" />
                <entry key="hibernate.format_sql" value="${hibernate.format_sql}" />
                <entry key="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy" />

                <!-- 
                <entry key="hibernate.connection.provider_disables_autocommit" value="true" />
                 -->

                <!-- Batch Process -->
                <entry key="hibernate.jdbc.batch_size" value="${jdbc.batch_size}" />
                <entry key="hibernate.jdbc.batch_versioned_data" value="${jdbc.batch_versioned_data}"/>
                <entry key="hibernate.order_inserts" value="true" />
                <entry key="hibernate.order_updates" value="true" />

                <!-- Search -->
                <entry key="hibernate.search.default.directory_provider" value="filesystem" />
                <entry key="hibernate.search.default.indexBase" value="${hibernate.search.index_base}" />

                <!-- LazyLoad -->
                <entry key="hibernate.enable_lazy_load_no_trans" value="true" />
            </map>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />



    <bean id="genericJpaDao" class="com.mandark.jira.app.persistence.orm.GenericJpaDao">
        <property name="batchSize" value="${jdbc.batch_size}" />
    </bean>



    <!-- Services -->

   <bean id="abstractJpaEntityService" class="com.mandark.jira.spi.app.service.AbstractJpaEntityService" abstract="true">
        <constructor-arg name="dao" ref="genericJpaDao" />
    </bean>
    <bean id="organisationService" class="com.mandark.jira.app.service.impl.OrganisationServiceImpl">
        <constructor-arg name="dao" ref="genericJpaDao" />
    </bean>
    <bean id="userService" class="com.mandark.jira.app.service.impl.UserServiceImpl">
        <constructor-arg name="dao" ref="genericJpaDao" />
    </bean>
    <bean id="teamService" class="com.mandark.jira.app.service.impl.TeamServiceImpl">
        <constructor-arg name="dao" ref="genericJpaDao" />
    </bean>
<<<<<<< HEAD
    <bean id="teamMemberService" class="com.mandark.jira.app.service.impl.TeamMemberServiceImpl">
        <property name="dao" ref="genericJpaDao" />
=======
    <bean id="projectService" class="com.mandark.jira.app.service.impl.ProjectServiceImpl">
        <constructor-arg name="dao" ref="genericJpaDao" />
        <property name="userService" ref="userService"></property>
>>>>>>> js5-project-bean-service-apis
    </bean>
 


    <!-- Controllers -->

    <bean id="abstractController" class="com.mandark.jira.web.controller.AbstractController" abstract="true">
        <property name="appName" value="${app.name}" />
        <property name="appTitle" value="${app.title}" />
        <property name="hostUrl" value="${web.url.host}" />
    </bean>



    <!-- API -->

    <bean id="abstractAPI" class="com.mandark.jira.web.rest.AbstractAPI" abstract="true">
    </bean>
    <bean id="organisationAPI" class="com.mandark.jira.web.rest.OrganisationAPI">
    <property name="orgService" ref="organisationService"/>
    </bean>
    <bean id="userAPI" class="com.mandark.jira.web.rest.UserAPI">
    <property name="userService" ref="userService"/>
    </bean>
    <bean id="teamAPI" class="com.mandark.jira.web.rest.TeamAPI">
    <property name="teamService" ref="teamService"/>
    <property name="userService" ref="userService"/>
    <property name="teamMemberService" ref="teamMemberService"/>
    </bean>
    <bean id="projectAPI" class="com.mandark.jira.web.rest.ProjectAPI">
    <property name="projectService" ref="projectService"/>
    </bean>


    <!-- Cloud Configurations -->



    <!-- Initializing Bean -->



</beans>